name: Windows
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  make:
    strategy:
      matrix:
        os: [windows-2019, windows-2016]
        debug: ["", "--debug"]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    env:
      GITPULLOPTIONS: --no-tags origin ${{github.ref}}
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
      - uses: actions/cache@v1
        with:
          path: C:\vcpkg\downloads
          key: ${{ runner.os }}-vcpkg-download-${{ matrix.os }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-vcpkg-download-${{ matrix.os }}-
            ${{ runner.os }}-vcpkg-download-
      - name: Install libraries with vcpkg
        run: |
          vcpkg --triplet x64-windows install readline zlib
      - name: git config
        run: |
          git config --system advice.detachedHead 0
      - uses: actions/checkout@v2
      - run: ./ruby/tool/actions-commit-info.sh
        shell: bash
        id: commit_info
      - name: "[rubyc] Install libraries"
        run: |
          choco install --no-progress squashfs
      - name: "[rubyc] Set ENV"
        run: |
          echo '::set-env name=ENCLOSE_IO_RUBYC_ADDTIONAL_ARGS::'${{ matrix.debug }}
      - name: "[rubyc] Set up Ruby"
        uses: ruby/setup-ruby@v1
      - name: "[rubyc] Install dependencies"
        run: bundle install
      - name: "[rubyc] Run rubocop"
        run: bundle exec rubocop
      - name: "[rubyc] Run tests"
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\${{ matrix.vs }}\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          set YACC=win_bison
          echo on
          wmic OS get OSArchitecture
          echo %PROCESSOR_ARCHITECTURE%
          set
          systeminfo
          where nmake
          where mksquashfs
          mksquashfs -version
          where ruby
          ruby -v
          where bundle
          bundle -v
          bundle exec rake
        shell: cmd
        env:
          RUBY_TESTOPTS: "-q --tty=no"
      - name: "[rubyc] Create Windows Release"
        if: ${{ github.ref == 'master' &&	matrix.os == "windows-2016" && matrix.debug == "" && success() }}
        id: create_windows_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: windows
          release_name: Latest Windows Build
          draft: false
          prerelease: false
      - name: "[rubyc] Upload Windows Release"
        if: ${{ github.ref == 'master' &&	matrix.os == "windows-2016" && matrix.debug == "" && success() }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_windows_release.outputs.upload_url }}
          asset_path: ./rubyc.exe
          asset_name: rubyc.exe
          asset_content_type: application/octet-stream
